#!/usr/bin/env perl

use 5.020;
use warnings;

# see perl doc for info on Getopt::Long configuration
use Getopt::Long qw(:config no_ignore_case bundling);
#
## globals
use constant TMPDIR => defined $ENV{TMPDIR}? $ENV{TMPDIR} : "/tmp";

sub help {
     say "We will get there.";

     exit(0);
}

# change function name
sub extract {
     my ($source, $target) = @_;

     # check if file exists

     chomp(my $valid_baka = `tar -tf $source 2>/dev/null | wc -l`);

     if (! $valid_baka) { # check if source is a valid tar.gz archive, and if
                          # there are any content in it
          say "File '$valid_baka' is not a valid baka file. Aborting.";
          exit(1);
     }

     `tar -xpzf $source -C $target`;
}

# creates a new backup (target) file for source dir
sub new_bak_file {
     my ($source, $target) = @_;

     ## check files
     unless (-e $source) {
          say "Could'nt find sorce file. Aborting.";
          exit(1);
     }

     if (-e $target) {
          print "Bak file already exists, overwrite it? [y/N]: ";
          chomp(my $ans = <STDIN>);

          given ($ans) {
               when (/^$|[nN]/) { say "Leaving."; exit(0)     }
               when (/[yY]/)    { say "Overwriting..."; break }

               default {
                    say "Unexpected answer. Aborting.";
                    exit(1);
               }
          }
     }
     ## end

     `tar -czf $target $source 2>/dev/null`;
}

sub main {
     my %options;

     # info about the meaning of the arguments can be found at sub help
     GetOptions(\%options,
                'help',
                'c',
                's=s', 'source=s',
                't=s', 'target=s'
     ) or do {
          say "BAKA! You're using it wrong. See --help for instructions.";
          exit(1);
     };

     &help if (defined $options{'help'});

     # say $options{'c'}, " ", $options{'s'}, " ", $options{'t'};

     &new_bak_file($options{'s'}, $options{'t'}) if ($options{'c'});
}

&main if (__FILE__ eq $0);

=begin cmnt
     ## will be used later
     chomp(my $st = (stat('README.md'))[10]);
     my @date = localtime($st);

     say $date[3];
     say $date[4] + 1;
     say $date[5] + 1900;
     ##
=end cmnt
